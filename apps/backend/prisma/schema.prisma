generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PermissionAction {
  READ
  CREATE
  UPDATE
  DELETE
}

enum PermissionResource {
  ADMIN_SETTINGS
}

enum UserType {
  ADMIN
  TEACHER
  STUDENT
}

enum SocialMedia {
  FACEBOOK
  INSTAGRAM
  TWITTER
  LINKEDIN
}

model Role {
  id   String @id @default(uuid())
  name String @unique

  users       User[]
  permissions Permission[] @relation("RoleToPermission")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("roles")
}

model Permission {
  id       String             @id @default(uuid())
  actions  PermissionAction[]
  resource PermissionResource

  roleId String
  role   Role   @relation(fields: [roleId], references: [id], name: "RoleToPermission")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("permissions")
}

model User {
  id       String   @id @default(uuid())
  name     String
  type     UserType
  email    String   @unique
  username String   @unique
  password String

  socials  Socials[]
  roleId   String?
  schoolId String?
  role     Role?     @relation(fields: [roleId], references: [id])
  school   School?   @relation("UserSchool", fields: [schoolId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model School {
  id           String  @id @default(uuid())
  name         String
  description  String?
  website      String?
  contactEmail String?
  supportEmail String?
  address      String?
  phoneNumber  String?

  socials Socials[]
  users   User[]    @relation("UserSchool")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("schools")
}

model Socials {
  id   String      @id @default(uuid())
  type SocialMedia
  link String

  userId   String?
  schoolId String?
  user     User?   @relation(fields: [userId], references: [id])
  school   School? @relation(fields: [schoolId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, type])
  @@unique([schoolId, type])
  @@map("socials")
}
