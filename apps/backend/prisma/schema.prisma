// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Action {
  READ
  CREATE
  UPDATE
  DELETE
}

enum Resource {
  SETTINGS
}

model Role {
  id   String @id @default(uuid())
  name String @unique

  users       User[]
  permissions Permission[] @relation("RoleToPermission")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("roles")
}

model Permission {
  id       String   @id @default(uuid())
  actions  Action
  resource Resource

  roleId String
  role   Role   @relation(fields: [roleId], references: [id], name: "RoleToPermission")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("permissions")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  username String @unique
  password String

  roleId   String?
  schoolId String?
  role     Role?   @relation(fields: [roleId], references: [id])
  school   School? @relation("UserSchool", fields: [schoolId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model School {
  id   String @id @default(uuid())
  name String

  users User[] @relation("UserSchool")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("schools")
}
